{"version":3,"sources":["redditapi.js","index.js"],"names":["searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","console","log","err","searchForm","document","getElementById","searchInput","showMessage","message","className","div","createElement","appendChild","createTextNode","searchContainer","search","insertBefore","querySelector","remove","truncateText","text","limit","shortened","indexOf","substring","addEventListener","value","output","forEach","image","post","preview","images","source","url","title","selftext","subreddit","score","innerHTML","preventDefault"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,CACL,OAAA,SAASA,EAAYC,EAAaC,GACjCC,OAAAA,MAA8CH,wCAAAA,EAAmBE,SAAAA,EAAgBD,UAAAA,GACrFG,KAAK,SAAA,GAAOC,OAAAA,EAAIC,SAChBF,KAAK,SAAA,GAAQG,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAA,GAAQF,OAAAA,EAAKA,SACjDG,MAAM,SAAA,GAAOC,OAAAA,QAAQC,IAAIC;;ACoE/B,aAzED,IAAA,EAAA,QAAA,eAyEC,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxED,IAAMC,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBAiD5C,SAASE,EAAYC,EAASC,GAEtBC,IAAAA,EAAMN,SAASO,cAAc,OAE/BF,EAAAA,UAAqBA,SAAAA,EAErBG,EAAAA,YAAYR,SAASS,eAAeL,IAElCM,IAAAA,EAAkBV,SAASC,eAAe,oBAE1CU,EAASX,SAASC,eAAe,UAEvBW,EAAAA,aAAaN,EAAKK,GAEvB,WAAA,WAAMX,OAAAA,SAASa,cAAc,UAAUC,UAAU,MAI9D,SAASC,EAAaC,EAAMC,GACpBC,IAAAA,EAAYF,EAAKG,QAAQ,IAAKF,GAChCC,OAAc,GAAdA,EAAwBF,EACrBA,EAAKI,UAAU,EAAGF,GAnE3BnB,EAAWsB,iBAAiB,SAAU,SAAK,GAEnCpC,IAAAA,EAAaiB,EAAYoB,MAEzBnC,EAASa,SAASa,cAAc,kCAAkCS,MAElEpC,EAAcc,SAASC,eAAe,SAASqB,MAEnC,IAAdrC,GAEU,EAAA,2BAA4B,gBAI9BqC,EAAAA,MAAQ,GAGbX,EAAAA,QAAAA,OAAO1B,EAAYC,EAAaC,GAAQE,KAAK,SAAW,GACzDkC,IAAAA,EAAS,6BAELC,EAAAA,QAAQ,SAAQ,GAEhBC,IAAAA,EAAQC,EAAKC,QACfD,EAAKC,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,sEAGyBL,GAAAA,8DAAAA,EAENC,kFAAAA,EAAKK,MACPhB,mCAAAA,EAAaW,EAAKM,SAAU,KACxCN,sBAAAA,EAAKI,IAEiCJ,yHAAAA,EAAKO,UACdP,sDAAAA,EAAKQ,MAT3C,oCAcQ,GAAA,SACDjC,SAAAA,eAAe,WAAWkC,UAAYZ,IAG/Ca,EAAAA","file":"Reddit Search App.b801bdf4.map","sourceRoot":"..","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(`https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`)\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n};\n","import reddit from \"./redditapi\";\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\n//Form event listener\nsearchForm.addEventListener(\"submit\", e => {\n  //Get search term\n  const searchTerm = searchInput.value;\n  //Get sort\n  const sortBy = document.querySelector('input[name = \"sortby\"]:checked').value;\n  //Get limit\n  const searchLimit = document.getElementById(\"limit\").value;\n  //Check input\n  if (searchTerm == \"\") {\n    //Show alert message\n    showMessage(\"Please add a search term\", \"alert-danger\");\n  }\n\n  //Clear search input bar\n  searchInput.value = \"\";\n\n  //Search Reddit\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    let output = '<div class=\"card-columns\">';\n    //Loop through posts\n    results.forEach(post => {\n      //Check post for image\n      const image = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\n      output += `\n    <div class=\"card\">\n  <img class=\"card-img-top\" src=\"${image}\" alt=\"Card image cap\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">${post.title}</h5>\n    <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n    <a href=\"${post.url}\" target=\"_blank\" class=\"btn btn-primary\">Read More</a>\n    <hr>\n    <span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\n    <span class=\"badge badge-dark\">Score: ${post.score}</span>\n  </div>\n</div>\n    `;\n    });\n    output += \"</div>\";\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  e.preventDefault();\n});\n\nfunction showMessage(message, className) {\n  //Create div\n  const div = document.createElement(\"div\");\n  //Add classes\n  div.className = `alert ${className}`;\n  //Add text\n  div.appendChild(document.createTextNode(message));\n  //Get parent container\n  const searchContainer = document.getElementById(\"search-container\");\n  //Get search\n  const search = document.getElementById(\"search\");\n  //Insert message\n  searchContainer.insertBefore(div, search);\n  //Timeout alert\n  setTimeout(() => document.querySelector(\".alert\").remove(), 2500);\n}\n\n//Truncate text\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(\" \", limit);\n  if (shortened == -1) return text;\n  return text.substring(0, shortened);\n}\n"]}